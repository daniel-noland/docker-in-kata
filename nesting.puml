@startuml
skinparam componentStyle uml2

package "Physical Machine" as physical {
    make_blk_device.sh as makeBlkDevice
    () var_lib_docker.img as dockerImg
    makeBlkDevice --> dockerImg : creates and formats as btrfs
    run.sh as runScript
    [docker daemon] as outerDocker
    runScript --> outerDocker : tells to start proxy container
    outerDocker --> proxy : runs
    package "Physical Machine Proxy Container (fairly high privileges)" as proxy {
        [systemd]
        component kataDocker [
            docker daemon
            (can run kata containers)
        ]
        systemd --> kataDocker : launches
        package "Kata Container (offers full VM isolation)" as kataContainer {
            database "/dev/loop0" as loop0
            () "/var/lib/docker" as varLibDocker
            loop0 <.. varLibDocker : backing image

            [systemd] as nestedSystemd
            component "docker daemon" as nestedDocker
            varLibDocker ..> nestedDocker : storage for all images and containers
            package "Isolated container (fairly restricted privileges)" as isolatedContainer {
                [your isolated process] as isolatedProcess
            }
        }
        kataDocker --> kataContainer : launches
        nestedSystemd --> nestedDocker : launches
        nestedDocker --> isolatedContainer : launches
    }
    dockerImg <.. loop0 : backing file
}

@enduml